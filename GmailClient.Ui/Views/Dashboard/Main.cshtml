@model MessagesListVm
@using System.Text.Json

<div class="sidebar">
    <h2>Menu</h2>
    <button>Main</button>
    <button onclick="openSendEmailModal()">Send letter</button>
</div>

<div class="main">
    <h1>Recent Emails</h1>
    <table>
        <thead>
            <tr>
                <th>Subject</th>
                <th>From</th>
                <th>Date</th>
                <th>Status</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var letters in Model.Messages)
            {
                <tr>
                    <td>@letters.Subject</td>
                    <td>@letters.From</td>
                    <td>@letters.Date</td>
                    <td class="@(letters.IsSent ? "status-sent" : "status-inbox")">
                        @(letters.IsSent ? "Sent" : "Inbox")
                    </td>
                    <td>
                        <button class="btn-view"
                                data-body='@Html.Raw(JsonSerializer.Serialize(letters.Body))'
                                onclick="openModal(this.dataset.body)">
                            View
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <button id="btnLoadMore" class="btn" onclick="getNext10Messages('@Model.NextPageToken')">Load more</button>
</div>

<div class="modal" id="emailModal">
    <div class="modal-content">
        <span class="close-btn" onclick="closeModal()">&times;</span>
        <h3>Email Content</h3>
        <textarea id="emailContent" readonly></textarea>
    </div>
</div>

<div class="modal" id="sendEmailModal">
    <div class="modal-content">
        <span class="close-btn" onclick="closeSendEmailModal()">&times;</span>
        <h3>Send Email</h3>
        <form id="sendEmailForm" onsubmit="return sendEmail(event)">
            <div class="form-group">
                <label for="emailTo">To:</label><br />
                <input type="email" id="emailTo" name="emailTo" required />
            </div>

            <div class="form-group">
                <label for="emailSubject">Subject:</label><br />
                <input type="text" id="emailSubject" name="emailSubject" required />
            </div>

            <label for="sendEmailContent">Body:</label><br />
            <textarea id="sendEmailContent" name="sendEmailContent"></textarea>

            <button class="btn" type="submit">Send</button>
        </form>
    </div>
</div>

<script>
    let emailEditor;
    let sendEmailEditor;

    ClassicEditor
        .create(document.querySelector('#emailContent'))
        .then(editor => {
            emailEditor = editor;
            emailEditor.isReadOnly = true;
        })
        .catch(error => {
            console.error(error);
        });


    function openModal(body) {
        document.getElementById('emailModal').style.display = 'flex';

        if (emailEditor) {
            const decodedBody = JSON.parse(body);   
            emailEditor.setData(decodedBody);
        } else {
            document.getElementById('emailContent').value = body;
        }
    }

    function closeModal() {
        document.getElementById('emailModal').style.display = 'none';
    }

    ClassicEditor
        .create(document.querySelector('#sendEmailContent'))
        .then(editor => {
            sendEmailEditor = editor;
        })
        .catch(error => {
            console.error(error);
        });

    function openSendEmailModal() {
        document.getElementById('sendEmailModal').style.display = 'flex';
    }

    function closeSendEmailModal() {
        document.getElementById('sendEmailModal').style.display = 'none';
    }

    function sendEmail(event) {
        event.preventDefault();

        const to = document.getElementById('emailTo').value;
        const subject = document.getElementById('emailSubject').value;
        const body = sendEmailEditor.getData();

        fetch('/dashboard/send', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ to, subject, body })
        })
        .then(response => {
            if (response.ok) {
                alert('Email sent successfully!');
                closeSendEmailModal();

                document.getElementById('sendEmailForm').reset();
                sendEmailEditor.setData('');
            } else {
                alert('Failed to send email.');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Error sending email.');
        });

        return false;
    }
</script>